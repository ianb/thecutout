    >>> from logdb.balancing import level2
    >>> from logdb.balancing.forwarder import rooted
    >>> import os, shutil
    >>> if os.path.exists('./tmp-data'):
    ...     shutil.rmtree('./tmp-data')
    >>> balance_app = app = level2.Application(preload=10, preload_dir='./tmp-data')
    >>> app = rooted(app)
    >>> from webob.dec import wsgify
    >>> @wsgify.middleware
    ... def set_remote_user(req, app, username):
    ...     req.environ['REMOTE_USER'] = username
    ...     return app
    >>> app = set_remote_user(app, username='a@b/c')
    >>> from webob import Request
    >>> def make_req(name, **kw):
    ...     url = 'http://localhost/c/a@b/' + name
    ...     return Request.blank(url, **kw)
    >>> print make_req('1')
    GET /c/a@b/1 HTTP/1.0...
    Host: localhost:80
    >>> print make_req('1').send(app)
    200 OK
    ...
    X-Node-Name: node-001
    ...
    {"collection_id": "...", "objects": []}
    >>> print make_req('2').send(app)
    200 OK
    ...
    X-Node-Name: node-007
    ...
    >>> print make_req('4').send(app)
    200 OK
    ...
    X-Node-Name: node-004
    ...
    >>> old_resp = make_req('4').send(app).json
    >>> balance_app.add_node('node-test', True, root=app)
    >>> print make_req('4').send(app)
    200 OK
    ...
    X-Node-Name: node-test
    ...
    >>> new_resp = make_req('4').send(app).json
    >>> new_resp['collection_id'] == old_resp['collection_id']
    True
    >>> print make_req('4').send(app)
