:tocdepth: 3

.. title:: The Cut-Out: a no-opinion syncing system for your Javascript/HTML applications

A `"Cut-Out" <http://en.wikipedia.org/wiki/Cut-out_(espionage)>`_, in espionage terms, is a trusted intermediary who facilitates the exchange of information between agents.

This project is a server and accompanying client library to provide an intermediary to store and communication information between browser-based applications (e.g., applications that use `localStorage` or `IndexedDB` as their primary storage).


Who is this for?
----------------

Using new browser features like `IndexedDB <https://developer.mozilla.org/en-US/docs/IndexedDB>`_ (or somewhat more primitive APIs like `localStorage <https://developer.mozilla.org/en-US/docs/DOM/Storage>`_) you can write sophisticated applications that don't rely on a server -- the entire application can be a written in Javascript and HTML with the user's persistent data stored in the browser.

*But* then the data is trapped in the browser, unable to be transferred to other devices or browsers.  No one wants that.  To fix that you'd have to develop your own persistence mechanism.  The Cut-Out is a general-purpose online persistence mechanism for this kind of situation.  The canonical data storage remains the browser itself, but data is backed up to the cloud, and transferred among devices.

New environments like `Firefox OS <http://www.mozilla.org/en-US/firefoxos/>`_ also encourage applications that use these local storage systems, but as a secondary concern also need to store data in the cloud.


Why is it different?
--------------------

There are several general-purpose systems like this, such as `Parse <https://parse.com/>`_ and `Firebase <https://www.firebase.com/>`_, or open source products like `PouchDB <http://pouchdb.com/>`_.

Unlike these The Cut-Out is **not opinionated**.  It doesn't include a data model.  It doesn't care what your objects look like.  It's a service you hook up to your persistence system.  All you have to do is provide a few methods, and keep a record of saved, new, dirty, and deleted objects.

The Cut-Out has also been written to be operationally simple and efficient; i.e., its deployment is simple, it's failure cases simple. It is also written with the expectation that a large portion of users will be dormant.  Someone may come along, use an application a few times, then disappear -- while that kind of use uses up a bit of disk space, it doesn't effect general scalability.


Learn More
----------

See the `Quick Start <quickstart.html>`_ for instructions on how to add support to your browser/HTML/Javascript application.

See the `Library Docs <library.html>`_ for more detailed instructions on integrating it.

If you are interested in the protocol see `the protocol description <protocol.html>`_.

If you are curious about design decisions see `the design rationale <design.html>`_.